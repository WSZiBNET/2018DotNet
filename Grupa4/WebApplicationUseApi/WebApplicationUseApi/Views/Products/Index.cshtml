@model IEnumerable<WebApplicationUseApi.Models.ProductsModel>

@{
    ViewData["Title"] = "Index";
}

<h2>Lista produktów i serwisów</h2>

<p>
    <a asp-action="Create">Utwórz nowy</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Wyszukaj po Nazwie: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />

            Wyszukaj po Kategorii:

            <select id='categoryList' asp-items="Html.GetEnumSelectList<DictCategory>()" name="SearchInt" value="@ViewData["currentFilter2"]">
                <option selected ="selected" value="">Wybierz kategorię</option>
            </select>

            

            @*<input list="categoryList" name="SearchInt" value="@ViewData["currentFilter2"]">*@

            <input type="submit" value="Szukaj" class="btn btn-default" />

            <a asp-action="Index">Powrót do całej listy</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.Category)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Price)
                </th>*@
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">@Html.DisplayNameFor(model => model.Name)</a>
            </th>

            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PriceSortParm"]">@Html.DisplayNameFor(model => model.Price)</a>

            </th>

            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["CategorySortParm"]">@Html.DisplayNameFor(model => model.Category)</a>
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.Category)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                @if (item.Category == 0)
                {
                    <td>Service</td>
                }
                else
                {
                    <td>Product</td>
                }
                <td>
                    @Html.ActionLink("Edytuj", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Szczegóły", "GetProduct", new { id = item.Id }) |
                    @Html.ActionLink("Usuń", "Delete", new { id = item.Id })

                    @*<a asp-action="GetProduct" asp-route-id="@item.Id">Szczegóły</a> |
                        <a asp-action="Edit" asp-route-id="@item.Id">Edytuj</a>*@
                </td>
            </tr>
        }
    </tbody>
</table>
